[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

uniform vec4 color_gap: hint_color = vec4(0.25);
uniform vec4 color_stripe: hint_color = vec4(1.0, 0.75, 0.0, 1.0);
uniform float divisions = 8.0; // increase for more stripe density
uniform float stripe_bias = 2.5; // 1.0 means no stripes; 2.0 means stripes and gaps are equal size
uniform float speed = 0.1;
uniform float angle = 0.7854; // in radians

void fragment() {
	float w = cos(angle) * UV.x + sin(angle) * UV.y - speed * TIME;
	if (floor(mod(w * divisions, stripe_bias)) < 0.0001) {
		COLOR = color_gap;
	} else {
		COLOR = color_stripe;
	}
}"

[resource]
shader = SubResource( 2 )
shader_param/color_gap = Color( 0.25, 0.25, 0.25, 0.25 )
shader_param/color_stripe = Color( 0.968627, 0.054902, 0.054902, 0.615686 )
shader_param/divisions = 24.0
shader_param/stripe_bias = 2.0
shader_param/speed = 0.1
shader_param/angle = 0.5
